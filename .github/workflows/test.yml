name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: npx prisma migrate deploy --skip-generate

      - name: Run tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: npm test -- --coverage --maxWorkers=2

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## ✅ Test Results\n\n';

            if (fs.existsSync('./coverage/coverage-summary.json')) {
              const summary = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf-8'));
              const total = summary.total;
              comment += `- **Lines**: ${total.lines.pct}%\n`;
              comment += `- **Statements**: ${total.statements.pct}%\n`;
              comment += `- **Functions**: ${total.functions.pct}%\n`;
              comment += `- **Branches**: ${total.branches.pct}%\n\n`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment + 'All tests passed! ✨'
            });
