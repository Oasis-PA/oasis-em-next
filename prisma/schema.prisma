generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider      = "prisma-zod-generator"
  output        = "../src/lib/zod-schemas"
  relationModel = "false"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Genero {
  id_genero Int       @id @default(autoincrement())
  nome      String    @unique
  sigla     String    @unique
  usuarios  Usuario[]
}

model TipoCabelo {
  id_tipo_cabelo Int       @id @default(autoincrement())
  nome           String    @unique
  descricao      String?
  produtos       Produto[]
  usuarios       Usuario[]
}

model Usuario {
  id_usuario      Int             @id @default(autoincrement())
  nome            String
  email           String          @unique
  telefone        String?
  senha           String
  data_nascimento DateTime?
  data_cadastro   DateTime        @default(now())
  id_genero       Int
  id_tipo_cabelo  Int?
  sobrenome       String?
  sobre           String?
  url_foto        String?         @db.VarChar
  avaliacoes      Avaliacao[]
  favoritos       Favorito[]
  passwordResets  PasswordReset[]
  genero          Genero          @relation(fields: [id_genero], references: [id_genero])
  tipo_cabelo     TipoCabelo?     @relation(fields: [id_tipo_cabelo], references: [id_tipo_cabelo])
}

model Categoria {
  id_categoria Int       @id @default(autoincrement())
  nome         String    @unique
  descricao    String?
  produtos     Produto[]
}

model Produto {
  id_produto     Int         @id @default(autoincrement())
  nome           String
  marca          String
  preco          Float
  data_cadastro  DateTime    @default(now())
  id_categoria   Int
  descricao      String?
  url_imagem     String?     @db.VarChar
  url_loja       String?     @db.VarChar
  id_tag         Int?
  id_tipo_pele   Int?
  id_tipo_cabelo Int?
  avaliacoes     Avaliacao[]
  favoritos      Favorito[]
  categoria      Categoria   @relation(fields: [id_categoria], references: [id_categoria])
  tag            Tag?        @relation(fields: [id_tag], references: [id_tag], onDelete: NoAction, onUpdate: NoAction)
  tipo_cabelo    TipoCabelo? @relation(fields: [id_tipo_cabelo], references: [id_tipo_cabelo], onDelete: NoAction, onUpdate: NoAction)
}

model Avaliacao {
  id_avaliacao   Int      @id @default(autoincrement())
  nota           Int
  comentario     String?
  data_avaliacao DateTime @default(now())
  id_usuario     Int
  id_produto     Int
  produto        Produto  @relation(fields: [id_produto], references: [id_produto])
  usuario        Usuario  @relation(fields: [id_usuario], references: [id_usuario])
}

model Favorito {
  id_favorito     Int      @id @default(autoincrement())
  data_favoritado DateTime @default(now())
  id_usuario      Int
  id_produto      Int
  produto         Produto  @relation(fields: [id_produto], references: [id_produto])
  usuario         Usuario  @relation(fields: [id_usuario], references: [id_usuario])
}

model Tag {
  id_tag   Int       @id @default(autoincrement())
  nome     String    @unique
  produtos Produto[]
}

model PasswordReset {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  id_usuario Int
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  usuario    Usuario  @relation(fields: [id_usuario], references: [id_usuario])
}

model Artigo {
  id           Int      @id @default(autoincrement())
  titulo       String   @default("NOT NULL")
  slug         String   @unique @default("NOT NULL")
  conteudo     String   @default("NOT NULL")
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model TipoPele {
  id_tipo_pele Int      @id @default(autoincrement())
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  nome         String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Empresas {
  id                   Int      @id @default(autoincrement()) @db.SmallInt
  nome_sobrenome       String
  email_corporativo    String   @unique @default("")
  telefone             Decimal  @db.Decimal
  empresa_representada String   @db.VarChar
  total_colaboradores  Int
  cargo                String
  motivo_contato       String
  data_solicitacao     DateTime @db.Timestamptz(6)
  status               String
}
 atualiza o rpisma ai